import type { StarlightUserConfig } from "@astrojs/starlight/types";
import type { ComponentType } from "preact";

/** 1) Extract the two flavors of Starlight sidebar group */
type SidebarEntry = NonNullable<StarlightUserConfig["sidebar"]>[number];
type SidebarManualGroup = Extract<SidebarEntry, { items: any[] }>;
type SidebarAutogeneratedGroup = Extract<SidebarEntry, { autogenerate: any }>;

/**
 * 2) The `group()` helper youâ€™ll use from astro.sidebar.ts
 *    attaches `icon` as non-enumerable so Starlight never sees it.
 */
export function group(
  key: string,
  config:
    | Omit<SidebarManualGroup, "label">
    | (Omit<SidebarAutogeneratedGroup, "label"> & { icon?: ComponentType }),
): (SidebarManualGroup | SidebarAutogeneratedGroup) & { icon?: ComponentType } {
  const result = {
    label: "",
    ...config,
  } as any;

  if ("icon" in config && config.icon) {
    Object.defineProperty(result, "icon", {
      value: config.icon,
      enumerable: false,
      writable: true,
      configurable: true,
    });
  }

  return result;
}
